#!/bin/bash

DEBUG=$1
OUTPUT_DIR=$2
INPUT_DIR=$3
IMAGE_TYPE=$4
PROCESS=$5
PATH_TO_IMAGES=$6
NUM_PATHS=$7
WORKFLOW=$8
BAND_PAN=$9
BAND_BLUE=$10
BAND_GREEN=$11
BAND_RED=$12
BAND_NIR=$13
BAND_CA=$14
BAND_RE=$15
BAND_SWIR=$16

PATH_TO_IMAGES=$( echo $PATH_TO_IMAGES | tr "%" " ")

if [ $DEBUG = "d" ]; then
    get_debug "starting band_math"
fi

echo
echo How many single band images would you like to make?
echo
echo EXAPLE: 7
echo
read num_images_to_make

echo
echo "WHat would you like the file names to start with?"
echo
echo "EXAMPLE: my_file"
echo
echo "To distinguish files Geomundo will add a number at the end of your filename: my_file1.tif, my_file2.tif and my_file3.tif etc.."
echo
read file_root

# Loop to create the number of single band images as stored in the 
#   variable $num_images_to_make
for ((i = 0 ; i <= $num_images_to_make ; i++)); do
    # Display all the files in the1input =directory along with the file 
    #    number and the number of bands in each file so they can easily
    #    make an expression string
    count=0
    for file in $PATH_TO_IMAGES;
    do
	count=$((count+1))
	num_bands=$( otbcli_ReadImageInfo -in $file | grep -e 'Number of bands' | cut -d" " -f5 )
	filename=$( echo $file | rev | cut -d"/" -f1 | rev )
	echo
	echo Image $count: $filename / $num_bands bands
    done
    # Create filename for current single band image
    filename="$IMAGE_TYPE-IMAGE_$i-BM.tif"
    filename="${file_root}$((i + 1)).tif"
    # Ask user for the expression string for this single band image
    echo
    echo Give me your expression string.
    echo
    echo "EXAMPLE: cos(im1b1)>cos(im2b1)?im3b1:im3b2"
    echo
    read expression
    # Create the new single band image with wanted expression
    otbcli_BandMath -il $PATH_TO_IMAGES \
		    -out $OUTPUT_DIR/$filename \
		    -exp $expression
done

# If original images are not stored in the output directory then do not remove
#    the images on completion
if [[ $PATH_TO_IMAGES =~ $OUTPUT_DIR ]]; then
    rm $PATH_TO_IMAGES
fi

if [ $DEBUG = "d" ]; then
    get_debug "ending LSMS"
fi
